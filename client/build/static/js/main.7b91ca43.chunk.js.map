{"version":3,"sources":["components/Header/index.js","components/Footer/index.js","hooks/useFetch.js","hooks/useForm.js","components/NewEntry/index.js","context/Settings.js","components/coditionals/If.js","context/LogIn.js","components/coditionals/Auth.js","components/ToDoList/index.js","components/PaginationSetter/index.js","components/LogInForm/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["className","useFetch","useState","error","setError","isLoading","setIsLoading","toDoList","setToDoList","fetchToDoList","a","fetch","raw","json","data","message","useEffect","completionHandler","entry","newStatus","completed","id","method","headers","body","JSON","stringify","newToDoList","map","object","console","deletionHandler","filter","useForm","callback","values","setValues","e","preventDefault","description","difficulty","assign","persist","target","name","value","arbitrarykey","onChange","NewEntry","props","response","addEntry","handleSubmit","handleChange","handleTextInput","Form","onSubmit","Row","Col","Control","type","placeholder","Button","SettingsContext","React","createContext","Settings","changePagination","entries","setState","resultsPerPage","state","Provider","this","children","Component","condition","LoginContext","AuthentiLog","setLoginState","loggedIn","token","user","cookie","save","login","username","password","btoa","validateToken","jwt","verify","logout","log","cookieToken","load","Auth","okToRender","useContext","isPermissible","permission","permissions","includes","Object","keys","ength","If","ToDoList","contents","settings","page","setPage","start","end","currentList","slice","Alert","variant","Spinner","animation","Table","striped","bordered","hover","key","onClick","length","PaginationSetter","min","max","LogInForm","context","contextType","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7b91ca43.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.scss'\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"Header\">To Do List</div>\r\n  )\r\n}","import React from 'react'\r\nimport './Footer.scss'\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"Footer\">By Andrew Kyllo</div>\r\n  )\r\n}","import { useState, useEffect } from 'react'\n\nfunction useFetch () {\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [toDoList, setToDoList] = useState([])\n\n  const fetchToDoList = async () => {\n    setIsLoading(true)\n    setError(false)\n    try {\n      const raw = await fetch('http://localhost:3001/toDoList')\n      const data = await raw.json()\n      setToDoList(data)\n    } catch (err) {\n      setError(err.message)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  function addEntry(entry) {\n    setToDoList([...toDoList,entry])\n  }\n\n  useEffect(() => {\n    fetchToDoList()\n  }, [])\n\n  const completionHandler = async entry => {\n    const newStatus = !entry.completed\n    entry.completed = newStatus\n    try {\n      await fetch(`http://localhost:3001/toDoList/${entry.id}`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(entry)\n      })\n      const newToDoList = toDoList.map(object => {\n        return object.id === entry.id ? { ...object, completed: newStatus } : object\n      })\n      setToDoList(newToDoList)\n    } catch (e) {console.error(e)}\n  }\n\n  const deletionHandler = async entry => {\n    try {\n      await fetch(`http://localhost:3001/toDoList/${entry.id}`, {\n        method: 'delete',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      })\n      const newToDoList = toDoList.filter(object => object.id !== entry.id)\n      setToDoList(newToDoList)\n    } catch (e) {console.error(e)}\n  }\n\n  return [\n    toDoList,\n    error,\n    isLoading, \n    addEntry,\n    completionHandler,\n    deletionHandler\n  ]\n}\n\nexport default useFetch\n","import { useState } from 'react'\n\nfunction useForm (callback) {\n  const [values, setValues] = useState({})\n\n  const handleSubmit = e => {\n    if (e) e.preventDefault()\n    if(values.description && values.difficulty && values.assign) {\n      callback(values)\n    }\n  }\n\n  const handleChange = e => {\n    e.persist()\n    setValues(values => {\n      const { name, value } = e.target\n      return {\n        ...values,\n        [name]: value\n      }\n    })\n  }\n\n  const handleTextInput = {\n    arbitrarykey: 'arbitraryValue',\n    onChange: function (e) {\n      e.persist()\n      setValues(values => {\n        const { name, value } = e.target\n        return {\n          ...values,\n          [name]: value, \n          completed: false\n        }\n      })\n    }\n  }\n\n  return [\n    handleSubmit,\n    handleChange,\n    handleTextInput,\n    values,\n  ]\n}\n\nexport default useForm\n","import React from 'react'\nimport useForm from '../../hooks/useForm'\nimport { Button, Form, Col } from 'react-bootstrap'\n\nfunction NewEntry (props) {\n  \n  async function postNewEntry () {\n    const raw = await fetch('http://localhost:3001/toDoList', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    })\n    const response = await raw.json()\n    props.addEntry(response)\n  }\n\n  const [\n    handleSubmit,\n    handleChange,\n    handleTextInput,\n    values\n  ] = useForm(postNewEntry)\n\n  return (\n    <div className=\"NewEntry\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Row>\n          <Col>\n            <Form.Control\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Description\"\n              {...handleTextInput}\n            />\n          </Col>\n          <Col>\n            <Form.Control\n              type=\"number\"\n              name=\"difficulty\"\n              placeholder=\"Difficulty\"\n              onChange={handleChange}\n            />\n          </Col>\n          <Col>\n            <Form.Control\n              type=\"text\"\n              name=\"assign\"\n              placeholder=\"Assign\"\n              {...handleTextInput}\n            />\n          </Col>\n          <Col>\n            <Button type=\"submit\" >Add to the list!</Button>\n          </Col>\n        </Form.Row>\n      </Form>\n    </div>\n  )\n}\n\nexport default NewEntry\n","import React from 'react'\r\n\r\nexport const SettingsContext = React.createContext()\r\n\r\nexport default class Settings extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { resultsPerPage: 10, changePagination:this.changePagination }\r\n  }\r\n\r\n  changePagination = entries => {\r\n    this.setState({ resultsPerPage:entries })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SettingsContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </SettingsContext.Provider>\r\n    )\r\n  }\r\n}","export default props => {\r\n  return props.condition ? props.children : null\r\n}","import React from 'react'\r\nimport cookie from 'react-cookies'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport const LoginContext = React.createContext()\r\n\r\nconst API = 'http://localhost:3333'\r\n\r\nclass AuthentiLog extends React.Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      loggedIn: false,\r\n      user: {},\r\n      login: this.login,\r\n      logout: this.logout\r\n    }\r\n  }\r\n\r\n  setLoginState = (loggedIn, token, user) => {\r\n    this.setState({ loggedIn, token, user })\r\n    cookie.save('auth', token || '')\r\n  }\r\n\r\n  login = async (username, password) => {\r\n    try {\r\n      const raw = await fetch(`${API}/signin`, {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}` \r\n        }\r\n      })\r\n      const response = await raw.json()\r\n      const token = response.token\r\n      this.validateToken(token)\r\n    } catch (error) {console.error(error)}\r\n  }\r\n\r\n  validateToken = token => {\r\n    try {\r\n      const user = jwt.verify(token, \"fine, keep your secrets\")\r\n      this.setLoginState(true, token, user)\r\n    } catch (error) {\r\n      this.setLoginState(false, null, {})\r\n      console.error('Token validation error:', error)\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    console.log('hello')\r\n    this.setLoginState(false, null, {})\r\n  }\r\n\r\n  componentDidMount () {\r\n    const cookieToken = cookie.load('auth')\r\n    if (cookieToken ) this.validateToken(cookieToken)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <LoginContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </LoginContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AuthentiLog","import React, { useContext } from 'react'\r\nimport If from './If'\r\nimport { LoginContext } from '../../context/LogIn'\r\n\r\nfunction Auth (props) {\r\n  const { loggedIn, user } = useContext(LoginContext)\r\n  let okToRender = false\r\n  let isPermissible = true\r\n  if (props.permission) {\r\n    isPermissible = user.permissions && user.permissions.includes(props.permission)\r\n  }\r\n  okToRender = loggedIn && isPermissible && Object.keys(user).ength !== 0\r\n  return (\r\n    <If condition={okToRender}>\r\n      {props.children}\r\n    </If>\r\n  )\r\n}\r\n\r\nexport default Auth","import React, { useState, useContext} from 'react'\nimport {SettingsContext} from '../../context/Settings.js'\nimport './ToDoList.scss'\nimport { Alert, Spinner, Table, Button } from 'react-bootstrap'\nimport Auth from '../coditionals/Auth'\n\nfunction ToDoList ({error, isLoading, contents, completionHandler, deletionHandler}) {\n  const settings = useContext(SettingsContext)\n  const [page, setPage] = useState(0)\n  const start = page * settings.resultsPerPage\n  const end = start + settings.resultsPerPage\n  const currentList = contents.slice(start, end)\n  return (\n    <div className=\"ToDoList\">\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      {isLoading ? <Spinner animation=\"grow\" /> : (\n        <>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Description</th>\n              <th>Difficulty</th>\n              <th>Assignment</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* make a tr with tds for every entry */}\n            {currentList.map(entry => (\n              <tr className={entry.completed ? \"completed\" : \"incomplete\"} key={entry.id}>\n                <td>{entry.id}</td>\n                <td>{entry.description}</td>\n                <td>{entry.difficulty}</td>\n                <td>{entry.assign}</td>\n                <Auth permission=\"update\">\n                  <td><Button onClick={() => completionHandler(entry)}>{entry.completed ? \"Set Incomplete\" : \"Complete\"}</Button></td>\n                </Auth>\n                <Auth permission=\"delete\">\n                  <td><Button variant=\"outline-danger\" onClick={() => deletionHandler(entry)}>Delete</Button></td>\n                </Auth>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        {page > 0 && <Button variant=\"outline-primary\" onClick={() => setPage(page - 1)}>Previous</Button>}\n        {contents.length > end && <Button  variant=\"outline-primary\" onClick={() => setPage(page + 1)}>Next</Button>}\n        </>\n      )\n      }\n    </div>\n  )\n}\n\nexport default ToDoList\n","import React, {useContext} from 'react'\r\nimport { SettingsContext } from '../../context/Settings'\r\n\r\nexport default function PaginationSetter () {\r\n  const settings = useContext(SettingsContext)\r\n  return (\r\n    <div>Number of entries to display per page: <input type=\"number\" min={0} max={20} placeholder={10} onChange={e => settings.changePagination(e.target.value)}></input></div>\r\n  )\r\n}","import React from 'react'\r\nimport { LoginContext } from '../../context/LogIn'\r\nimport If from '../coditionals/If'\r\n\r\nclass LogInForm extends React.Component {\r\n  static contextType = LoginContext\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  \r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.context.login(this.state.username, this.state.password)\r\n    this.setState({ username: '', password: ''})\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <>\r\n        <If condition={this.context.loggedIn}>\r\n          <button onClick={this.context.logout}>Log Out</button>\r\n        </If>\r\n\r\n        <If condition={!this.context.loggedIn}>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input type=\"text\" placeholder=\"Username\" name=\"username\" onChange={this.handleChange}/>\r\n            <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.handleChange}/>\r\n            <button value=\"submit\">Log In</button>\r\n          </form>\r\n        </If>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogInForm","import React from 'react';\nimport './App.scss';\nimport Header from '../Header'\nimport Footer from '../Footer'\nimport useFetch from '../../hooks/useFetch' \nimport NewEntry from '../NewEntry'\nimport ToDoList from '../ToDoList'\nimport Settings from '../../context/Settings'\nimport PaginationSetter from '../PaginationSetter';\nimport LogInForm from '../LogInForm';\nimport AuthentiLog from '../../context/LogIn';\nimport Auth from '../coditionals/Auth'\n\n\nfunction App() {\n  const [toDoList, error, isLoading, addEntry, completionHandler, deletionHandler] = useFetch()\n  return (\n    <AuthentiLog>\n      <Settings>\n        <div className=\"App\">\n          <Header/>\n          <LogInForm/>\n          <hr />\n          <Auth permission=\"create\">\n            <NewEntry addEntry={addEntry} />\n          </Auth>\n          <Auth permission=\"read\">\n            <ToDoList completionHandler={completionHandler} deletionHandler={deletionHandler} contents={toDoList} error={error} isLoading={isLoading} />\n          </Auth>\n        </div>\n        <Auth permission=\"read\">\n          <PaginationSetter/>\n        </Auth>\n        <Footer />\n      </Settings>\n    </AuthentiLog>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}